# -*- mode: text; -*-

* From Femlisp-0.9.0 to Femlisp-0.9.1:

The DX logfile is now written to #p"femlisp:images;"

Corrections in the files FAQ, CHANGES, INSTALL, README, and TODO.

Some extensions of general problem solving.  This is work in progress.

Femlisp now works with SBCL on Mac OS X and with CMUCL on Sparc/Solaris.
Unfortunately, the communication with Data Explorer on Mac OS X is not yet
working.

The whole installation process is specified in more detail in INSTALL.  The
approach using the global installation script "femlisp-install" is
abandoned, because it does not make much sense for more sophisticated
users.

For convenience, I have included the ASDF and Infix libraries with Femlisp
in the directory "femlisp/external/".  CL-PPCRE is put there as well by
executing using "make cl-ppcre" in the Femlisp main directory.


* From Femlisp-0.8.5 to Femlisp-0.9.0:

There are the beginnings of a GPS (general problem solver:-).  The generic
function SOLVE can be called on a blackboard containing a problem.  It then
tries to find a solution itself.

Femlisp is almost completely ANSI-compliant now.  At least, it works on
both SBCL and CMUCL.  The platform/implementation dependent parts are
concentrated in femlisp:src;basic;port.lisp.

DOUBLE-FLOAT is the standard read format now.  Uniform DOUBLE-FLOAT vectors
can be written as #d(...).

Some packages have been renamed for avoiding name clashes with other CL
libraries, e.g. MACROS became FL.MACROS, UTILITIES became FL.UTILITIES,
etc.  I intend to do the analogous change for other Femlisp packages, too.

Femlisp now uses the ASDF system definition facility by Dan Barlow instead
of MK-DEFSYSTEM.  Thanks to Dan and thanks to Christophe Rhodes for helping
me with this change.

Femlisp is somewhat faster now (by about 10%-30%).  The main reason is the
caching of the last result of CORNERS (corners of a cell).

A replacement for Matlisp was incorporated (package FL.MATLISP) which is
sufficient for the restricted LAPACK functionality needed by Femlisp.  The
main advantages of this change are that Femlisp should be easily portable
to other CL implementations now and that these routines work much faster on
small matrices.  FL.MATLISP matrices can be written with #m(...).


* From Femlisp-0.8.4 to Femlisp-0.8.5:

The mesh module was improved.  Especially, cells are now CLOS classes
instead of structures (as it was already described in my article on Femlisp
in femlisp/doc).  The classes are automatically generated at runtime.

A new package called FEMLISP.MATLISP was introduced which acts at the
moment as an interface to MATLISP.  The next move will be to plug in my
Matlisp replacement.  (This replacement is ready up to some polishing.)

The regression test suite was improved.  Especially, all demos are now
tested as well.

Some errors were removed.


* From Femlisp-0.8.3 to Femlisp-0.8.4:

The iteration module was improved.  Iterative solvers and problem solution
stragtegies are now subclasses of iterations.  This allows for the easy
integration of nonlinear solvers and time stepping schemes.

The interface for solving has changed to the form (SOLVE SOLVER
BLACKBOARD).  That is, the problem to be solved is now defined on a
blackboard and the solution is written to this blackboard.  This is true
for both linear solvers and problem solution strategies.

Several smaller changes.


* From Femlisp-0.8.2 to Femlisp-0.8.3:

Removed a bug in the refinement of product cells which contain simplices of
dimension >=3.

Adaption to the new Matlisp.  MATRIX-REF is a macro dispatching to
MATRIX-REF-1D and MATRIX-REF-2D.  We also unexport MATLISP:REAL after
loading Matlisp, because it interferes with COMMON-LISP:REAL.
