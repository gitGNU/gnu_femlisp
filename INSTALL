# -*- mode: text; -*-

##################################
### Femlisp installation guide ###
##################################

* Software needed:

** Common Lisp implementation:
  - CMUCL or SBCL

** Common Lisp software:
  - MK-DEFSYSTEM or ASDF
  - Infix (comes bundled with Femlisp for convenience)

** Common Lisp environment:
  - Emacs (recommended packages: SLIME or Ilisp)

** Non-Lisp software:
  - Gnuplot
  - Data Explorer (OpenDX)

* Documentation

** Common Lisp documentation
  - Hyperspec

---------------------------------------------------------------------------

* Quick installation for certain operating systems

** Debian GNU/Linux

You can use the commands:
    
    apt-get install gnuplot dx hyperspec wget
    apt-get install cmucl/experimental # alternatively: sbcl/testing
    apt-get -t testing install infix ilisp
    cd ABSOLUTE_PATH_TO_DIRECTORY_OF_YOUR_CHOICE
    wget -O - http://www.femlisp.org/femlisp-current.tar.gz | tar xzvf -

Then put the following line in your .emacs-File:

    (load "ABSOLUTE_PATH_TO_DIRECTORY_OF_YOUR_CHOICE/femlisp/femlisp.el")

Now, you should be able to start Femlisp from within Emacs by issuing the
command 'M-x femlisp'.

---------------------------------------------------------------------------

* Detailed installation instructions

** (A) Installation of a Common Lisp implementation

There are two Common Lisp implementations with which Femlisp has been
tested to work, namely CMUCL or SBCL.  I recommend using CMUCL on X86/Linux
or Sparc/Solaris, mainly because it behaves more gracefully to heap
overflow, and SBCL on MacOSX.

Femlisp should also run with little changes within other ANSI Common Lisp
environments, especially the commercial ones Allegro CL, Lispworks, Corman
CL, Scieneer CL and OpenMCL.  It might also be possible to use Femlisp with
GCL after some changes due to the lack of ANSI compliance of GCL.  On the
other hand, using Femlisp with interpreters or bytecode compilers like
CLISP does not make much sense, because such systems are probably too slow.

** (B) Graphics

Femlisp uses two graphics packages, namely Gnuplot and Data Explorer.  Make
sure that they can be found in your path and that they work.

[MacOSX: Use the DX from fink/unstable.]

** (C) Femlisp download

*** Alternative 1: Download the current Femlisp version
(if "wget" should not be available try "curl" instead)

  wget -O - http://www.femlisp.org/femlisp-current.tar.gz | tar xzvf -

You can check the correctness of the download against the binary GPG
signature in <http://www.femlisp.org/femlisp-current.tar.gz.sig>.  My
public PGP key can be found at
<http://www.iwr.uni-heidelberg.de/~Nicolas.Neuss/nicolas_neuss.pgp>.

*** Alternative 2: Checkout a CVS version

  cvs -z3 -d:ext:anoncvs@savannah.nongnu.org:/cvsroot/femlisp co femlisp

** (D) Configuration of the startup script

After these steps you should look at the script "femlisp/bin/femlisp" and
set the variables FEMLISP_DIR to the path of the Femlisp directory,
FEMLISP_CL to the path of the startup script of your CL implementation, and
CL_TYPE to either "sbcl" or "cmucl".

** (E) Compiling Femlisp

You should now be able to start Femlisp by executing the script
"femlisp/bin/femlisp.  The first time you use this script, your Lisp
implementation has to compile Femlisp.  This will take a while.  The next
time, startup will be much faster.  You can exit Femlisp by typing
"(quit)".

** (F) [OPTIONAL] Saving a core

If you use CMUCL you can save a core which avoids reloading CL-PPCRE and
Femlisp during startup.  This is done by executing the command

  make femlisp-core

from inside the Femlisp main directory.  After this operation, Femlisp
should start up very fast.

** (G) Setup of a simple interactive Femlisp environment

It is essential to use Femlisp from within a Lisp environment because
otherwise you do not even have a command history.

A freely available Lisp environment is Emacs where you can use SLIME or
ILISP.  Built-in in Emacs is inferior-lisp-mode which is not really
satisfactory but easiest to install: simply add the following lines to your
.emacs-file (replacing FEMLISP_DIRECTORY with the correct path):

  (defun femlisp ()
    "Start femlisp in an inferior-lisp buffer."
    (interactive)
    (run-lisp "/FEMLISP_DIRECTORY/bin/femlisp"))

I recommend adding the following two lines as well:

  (setq same-window-buffer-names
     (delete "*inferior-lisp*" same-window-buffer-names))

Now the Emacs command 'M-x femlisp' should run Femlisp in an inferior
Lisp buffer.


---------------------------------------------------------------------------

* Using Femlisp

Start Femlisp and look at the demos by typing "(femlisp-demo)" followed by
return at the CL prompt (do not forget the parentheses!).  You drop out of
the demos by typing "quit" (without parentheses) at the demo prompt, and
you can exit Femlisp by typing "(quit)" at the CL prompt.

If you want to start real work with Femlisp, you should get yourself some
literature on CL. An indispensable resource for Common Lisp is the ANSI CL
specification in the form of the Hyperspec, which is available online.

